0ADD R0, R0, #0
0 00 101000 000 000 0000 0000 000
500000
4LDR R0, [R0, #266] //carga el tamaño de la imagen
00 01 011001 000 000 0010 0001 010
B2010A


LOOP:
8LDR R1, [R5, #267] //carga el valor del pixel
00 01 011001 101 001 0010 0001 011
B3490B




12LDR R2, [R1, #0] //carga la posición de conteo de pixel
00 01 011001 001 010 0000 0000 000
B25000

16ADD R2, R2, #1 //aumenta el conteo de pix
0 00 101000 010 010 0000 0000 001

509001

20STR R2, [R1, #0] //Guarda el conteo aumentado
00 01 011000 001 010 0000 0000 000
B05000

24SUBS R4, R3, R1 //resta para ver si es mayor o menor
00 00 000101 011 100 0000 0000 001
AE001
28BGE Greater Offset = BEQ se calcula (48 – (28 + 8))  >> 2 = 3

01 10 100000 000 000 0000 0000 011
3400003
32ADD R5, R5, #1
0 00 101000 101 101 0000 0000 001
516801

36SUBS R4, R0, R5
00 00 000101 000 100 0000 0000 101
A2005
40BGE LOOP //ADD R7, R6, #8 BEQ se calcula (56 – (40 + 8))  >> 2
01 10 100000 000 000 0000 0000 010
3400002
44 ADD R7,R6, #100
0 00 101000 110 111 0000 1100 100
51B864



Greater:
48 ADD R3, R1, #0
00 00 100100 001 011 0000 000 000
242C00
52 ADD R7,R6, #48
0 00 101000 110 111 0000 0110 000
51B830
LOOP:
56 ADD R7, R6, #12
0 00 101000 110 111 0000 0001 000
51B80C
